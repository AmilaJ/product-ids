/*******************************************************************************
 * Copyright  (c) 2015-2016, WSO2.Telco Inc. (http://www.wso2telco.com) All Rights Reserved.
 * 
 * WSO2.Telco Inc. licences this file to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/<%

var log = new Log();
var userName = session.get("user");
var scimClient = require('/controllers/scim-providers/scimAdminClient.jag');

var i18n = session.get("i18n");

function edit(){

    try{
    	
        try{
            require('../../authenticationHandler.jag');

        }catch(e){
            log.error(e);
            response.sendRedirect("login.jag?e=1&error=AuthenticationFail");
            return;
        }

//		var consumerId = userName + session.get("tenant.domain");
        var provider = request.getParameter("providerId");

        var providers = session.get("scimProviders");
        var editProvider  = null;
        for each (var p in providers){
            if(p.providerId === provider){
                editProvider = p;
                break;
            }
        }


        if(editProvider == null){
            response.sendRedirect("../../my_scim_providers.jag?e=1&error=provider_name_incorrect");
            return;
        }

        var req = <con:deleteUserProvider xmlns:con="http://config.common.scim.identity.carbon.wso2.org">
                                 <con:consumerId></con:consumerId>
                                 <con:providerId></con:providerId>
                              </con:deleteUserProvider>;


//        req.*::consumerId.setChildren(consumerId);
        req.*::providerId.setChildren(provider);
        scimClient.deleteUserSCIMProvider(req);

        response.sendRedirect("../../my_scim_providers.jag?s=1&sMsg=scim_deleted");
    }
    catch(e){
        log.error(e);
        response.sendRedirect("../../index.jag?e=1&error=" + e);

    }

}

edit();


%>
