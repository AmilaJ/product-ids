/*******************************************************************************
 * Copyright  (c) 2015-2016, WSO2.Telco Inc. (http://www.wso2telco.com) All Rights Reserved.
 * 
 * WSO2.Telco Inc. licences this file to you under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 *   http://www.apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 ******************************************************************************/<%
var log = new Log();
//var cookie = request.getParameter("cookie") ;
var user = request.getParameter("user");//logged in user, not admin user
var captchaOnly = request.getParameter("captcha");
var allChallanges = {};


getUserChallanges();

function isValidMsisdn() {
	try {
		var remoteUserStoreMgrClient = require('controllers/pin_reset/remoteUserStoreMgrClient.jag');
		var validMsisdn = remoteUserStoreMgrClient.isExistingUser(user);
		return validMsisdn;
	} catch(e) {
	    log.error(e);
		return false;
	}
}

function getUserChallanges() {
// 	session.put('auth-cookie', cookie);
// 	session.put('user', user);
	var validMsisdn = isValidMsisdn();
	if(validMsisdn == 'true') {
		try {
			setCaptchaData();
			if(captchaOnly != 1) { 
				setChallengeQuestions();
			}
			print( allChallanges );
		} catch(e) {
			print(e);
		    log.error(e);
		}
	} else {
		var jsonObj = {};
		jsonObj.error = "true";
		jsonObj.msg = "Invalid MSISDN.";
		print(jsonObj);
	}
}

function setCaptchaData() {
	try {
		var userInfoRecoveryClient = require('controllers/pin_reset/userInfoRecoveryClient.jag');
		var captchaData = userInfoRecoveryClient.getCaptchaData();
		allChallanges.captchaData = captchaData;
	} catch(e) {
		print(e);
	    log.error(e);
	}
}

function setChallengeQuestions() {
	try {
		var userProfileMgtClient = require('controllers/pin_reset/userProfileMgtClient.jag');
		allChallanges.challenge1 = userProfileMgtClient.getChallengeQestion1(user);
		allChallanges.challenge2 = userProfileMgtClient.getChallengeQestion2(user);
// 		log.info("999999999999999999999999999999999999999999999");
// 		log.info(allChallanges.challenge1);
// 		log.info(allChallanges.challenge2);
	} catch(e) {
		print(e);
	    log.error(e);
	}
}
 

%>
